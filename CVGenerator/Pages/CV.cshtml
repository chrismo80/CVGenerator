@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model CVGenerator.Pages.CVModel
@{
    ViewData["Title"] = "CV Generator";
}

<h1>@ViewData["Title"]</h1>

<p>Hier kannst du einen Lebenslauf mit Anschreiben generieren lassen.</p>

<form method="post" asp-page-handler="Generate" enctype="multipart/form-data">
    <div class="row">
        <div class="col-md-6">
            <h3>Bewerber</h3>

                <!-- Basic Details Section -->
                <div class="mb-3">
                    <input asp-for="Name" class="form-control" placeholder="Name" required />
                </div>
                <div class="mb-3">
                    <input asp-for="Email" class="form-control" placeholder="Email" required />
                </div>
                <div class="mb-3">
                    <input asp-for="Location" class="form-control" placeholder="Stadt" required />
                </div>
                <div class="mb-3">
                    <input asp-for="Phone" class="form-control" placeholder="Telefonnummer" required />
                </div>
                <div class="mb-3">
                    <input asp-for="Link" class="form-control" placeholder="Github" required />
                </div>
                <div class="mb-3">
                    <input asp-for="Role" class="form-control" placeholder="Aktuelle Rolle" required />
                </div>
                <div class="mb-3">
                    <input asp-for="Degree" class="form-control" placeholder="Titel" />
                </div>

            <div class="mb-3">
                <label asp-for="Summary" class="form-label">Summary</label>
                <textarea asp-for="Summary" rows="10" class="form-control" placeholder="Kurzbeschreibung" required></textarea>
            </div>


            <!-- Profile Picture Section -->
            <div class="mt-3">
                <label for="profilePicture">Foto</label>
                <input type="file" class="form-control" id="profilePicture" name="ProfilePicture" accept="image/*" required />
                <img id="profilePreview" class="img-fluid mt-2" style="max-width: 200px; max-height: 200px;" />
            </div>



        </div>

        <div class="col-md-6">
            <h3>Neuer Arbeitgeber</h3>
            <!-- Basic Details Section -->
            <div class="mb-3">
                <input asp-for="Company" class="form-control" placeholder="Firma" required />
            </div>
            <div class="mb-3">
                <input asp-for="Address" class="form-control" placeholder="Strasse" required />
            </div>
            <div class="mb-3">
                <input asp-for="City" class="form-control" placeholder="Stadt" required />
            </div>
            <div class="mb-3">
                <input asp-for="NewRole" class="form-control" placeholder="Neue Rolle" required />
            </div>
            <div class="mb-3">
                <input asp-for="Product" class="form-control" placeholder="Bereich" required />
            </div>
            <div class="mb-3">
                <input asp-for="Recruiter" class="form-control" placeholder="Anrede" required />
            </div>

            <div class="mb-3">
                <textarea asp-for="Letter" rows="30" class="form-control" placeholder="Anschreiben" required></textarea>
            </div>
            <div class="mb-3">
                <textarea asp-for="Postskriptum" rows="5" class="form-control" placeholder="P.S.:"></textarea>
            </div>

            <div class="d-flex justify-content-end gap-2">
                <button type="submit" asp-page-handler="Import" class="btn btn-secondary">Import</button>
                <button type="submit" asp-page-handler="Export" class="btn btn-secondary">Export</button>
                <button type="submit" asp-page-handler="Generate" class="btn btn-primary">Download PDF</button>
            </div>

        </div>
    </div>


    <div class="row">

            <!-- Right Column: Education and Work Experience (70% width) -->
        <div class="col-md-12">
            <!-- Education Section -->
            <h3>Bildungsweg</h3>
            <div id="education-container">
                @for (int i = 0; i < Model.Educations.Count; i++)
                {
                    <div class="education-entry row mb-2 d-flex align-items-center">
                        <div class="col-md-2">
                            <input asp-for="Educations[i].Start" type="date" class="form-control" required />
                        </div>
                        <div class="col-md-2">
                            <input asp-for="Educations[i].End" type="date" class="form-control" required />
                        </div>
                        <div class="col-md-3">
                            <input asp-for="Educations[i].Text" class="form-control" placeholder="Abschluss" required />
                        </div>
                        <div class="col-md-4">
                            <input asp-for="Educations[i].Details" class="form-control" placeholder="Schule, Stadt" />
                        </div>
                        <div class="col-md-1 text-end">
                            <button type="button" class="btn btn-danger btn-sm remove-education">-</button>
                        </div>
                    </div>
                }
            </div>
            <button style="float: right;" type="button" id="add-education" class="btn btn-success btn-sm">+</button>

            <hr />

            <!-- Work Experience Section -->
            <h3>Berufserfahrung</h3>
            <div id="work-container">
                @for (int i = 0; i < Model.WorkExperiences.Count; i++)
                {
                    <div class="work-entry row mb-2 d-flex align-items-center">
                        <div class="col-md-2">
                            <input asp-for="WorkExperiences[i].Start" type="date" class="form-control" required />
                        </div>
                        <div class="col-md-2">
                            <input asp-for="WorkExperiences[i].End" type="date" class="form-control" required />
                        </div>
                        <div class="col-md-3">
                            <input asp-for="WorkExperiences[i].Text" class="form-control" placeholder="Arbeitgeber, Stadt" required />
                        </div>
                        <div class="col-md-4">
                            <input asp-for="WorkExperiences[i].Details" class="form-control" placeholder="Position" />
                        </div>
                        <div class="col-md-1 text-end">
                            <button type="button" class="btn btn-danger btn-sm remove-work">-</button>
                        </div>
                    </div>
                }
            </div>
            <button style="float: right;" type="button" id="add-work" class="btn btn-success btn-sm">+</button>

            <hr />

            <!-- Projects Section -->
            <h3>Projekte</h3>
            <div id="project-container">
                @for (int i = 0; i < Model.Projects.Count; i++)
                {
                    <div class="project-entry row mb-2 d-flex align-items-center">
                        <div class="col-md-2">
                            <input asp-for="Projects[i].Start" type="date" class="form-control" required />
                        </div>
                        <div class="col-md-2">
                            <input asp-for="Projects[i].End" type="date" class="form-control" required />
                        </div>
                        <div class="col-md-7">
                            <input asp-for="Projects[i].Text" class="form-control" placeholder="Beschreibung" required />
                        </div>
                        <div class="col-md-1 text-end">
                            <button type="button" class="btn btn-danger btn-sm remove-project">-</button>
                        </div>
                    </div>
                }
            </div>
            <button style="float: right;" type="button" id="add-project" class="btn btn-success btn-sm">+</button>

            <hr />

            <!-- Skills Section -->
            <h3>Skills</h3>
            <div id="skills-container">
                @for (int i = 0; i < Model.Skills.Count; i++)
                {
                    <div class="skill-entry row mb-2 d-flex align-items-center">
                        <div class="col-md-3">
                            <input asp-for="Skills[i].Text" class="form-control" placeholder="Fähigkeit" required />
                        </div>
                        <div class="col-md-4">
                            <input asp-for="Skills[i].Percent" type="range" class="form-range" min="0" max="100" />
                            <span id="skill-percent-@i" class="skill-percent">0%</span>
                        </div>
                        <div class="col-md-3">
                            <input asp-for="Skills[i].Level" type="range" class="form-range" min="1" max="3" />
                            <span id="skill-level-@i" class="skill-level">1</span>
                        </div>
                        <div class="col-md-2 text-end">
                            <button type="button" class="btn btn-danger btn-sm remove-skill">-</button>
                        </div>
                    </div>
                }
            </div>
            <button style="float: right;" type="button" id="add-skill" class="btn btn-success btn-sm">+</button>

            <hr />

            <!-- Languages Section -->
            <h3>Languages</h3>
            <div id="languages-container">
                @for (int i = 0; i < Model.Languages.Count; i++)
                {
                    <div class="language-entry row mb-2 d-flex align-items-center">
                        <div class="col-md-3">
                            <input asp-for="Languages[i].Text" class="form-control" placeholder="Sprache" required />
                        </div>
                        <div class="col-md-4">
                            <input asp-for="Languages[i].Percent" type="range" class="form-range" min="0" max="100" />
                            <span id="language-percent-@i" class="language-percent">0%</span>
                        </div>
                        <div class="col-md-3">
                            <input asp-for="Languages[i].Level" type="range" class="form-range" min="1" max="3" />
                            <span id="language-level-@i" class="language-level">1</span>
                        </div>
                        <div class="col-md-2 text-end">
                            <button type="button" class="btn btn-danger btn-sm remove-language">-</button>
                        </div>
                    </div>
                }
            </div>
            <button style="float: right;" type="button" id="add-language" class="btn btn-success btn-sm">+</button>

            <hr />

            <!-- Version Control Section -->
            <h3>Versionsverwaltung</h3>
            <div id="versionings-container">
                @for (int i = 0; i < Model.Versionings.Count; i++)
                {
                    <div class="versioning-entry row mb-2 d-flex align-items-center">
                        <div class="col-md-3">
                            <input asp-for="Versionings[i].Text" class="form-control" placeholder="Versionsverwaltung" required />
                        </div>
                        <div class="col-md-4">
                            <input asp-for="Versionings[i].Percent" type="range" class="form-range" min="0" max="100" />
                            <span id="versioning-percent-@i" class="versioning-percent">0%</span>
                        </div>
                        <div class="col-md-3">
                            <input asp-for="Versionings[i].Level" type="range" class="form-range" min="1" max="3" />
                            <span id="versioning-level-@i" class="versioning-level">1</span>
                        </div>
                        <div class="col-md-2 text-end">
                            <button type="button" class="btn btn-danger btn-sm remove-versioning">-</button>
                        </div>
                    </div>
                }
            </div>
            <button style="float: right;" type="button" id="add-versioning" class="btn btn-success btn-sm">+</button>
        </div>
    </div>
</form>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Profile Picture Preview
        document.getElementById("profilePicture").addEventListener("change", function (event) {
            let reader = new FileReader();
            reader.onload = function () {
                document.getElementById("profilePreview").src = reader.result;
                document.getElementById("profilePreview").style.display = "block";
            };
            reader.readAsDataURL(event.target.files[0]);
        });

        // Add Education Entry
        document.getElementById("add-education").addEventListener("click", function () {
            let container = document.getElementById("education-container");
            let index = container.getElementsByClassName("education-entry").length;
            let newEntry = `
            <div class="education-entry row mb-2 d-flex align-items-center">
                <div class="col-md-2">
                    <input name="Educations[${index}].Start" type="date" class="form-control" required />
                </div>
                <div class="col-md-2">
                    <input name="Educations[${index}].End" type="date" class="form-control" required />
                </div>
                <div class="col-md-3">
                    <input name="Educations[${index}].Text" class="form-control" placeholder="Abschluss" required />
                </div>
                <div class="col-md-4">
                    <input name="Educations[${index}].Details" class="form-control" placeholder="Schule, Stadt" required />
                </div>
                <div class="col-md-1 text-end">
                    <button type="button" class="btn btn-danger btn-sm remove-education">-</button>
                </div>
            </div>`;
            container.insertAdjacentHTML("beforeend", newEntry);
        });

        // Add Work Experience Entry
        document.getElementById("add-work").addEventListener("click", function () {
            let container = document.getElementById("work-container");
            let index = container.getElementsByClassName("work-entry").length;
            let newEntry = `
            <div class="work-entry row mb-2 d-flex align-items-center">
                <div class="col-md-2">
                    <input name="WorkExperiences[${index}].Start" type="date" class="form-control" required />
                </div>
                <div class="col-md-2">
                    <input name="WorkExperiences[${index}].End" type="date" class="form-control" required />
                </div>
                <div class="col-md-3">
                    <input name="WorkExperiences[${index}].Text" class="form-control" placeholder="Arbeitgeber, Stadt" required />
                </div>
                <div class="col-md-4">
                    <input name="WorkExperiences[${index}].Details" class="form-control" placeholder="Position" />
                </div>
                <div class="col-md-1 text-end">
                    <button type="button" class="btn btn-danger btn-sm remove-work">-</button>
                </div>
            </div>`;
            container.insertAdjacentHTML("beforeend", newEntry);
        });

        // Add Project Entry
        document.getElementById("add-project").addEventListener("click", function () {
            let container = document.getElementById("project-container");
            let index = container.getElementsByClassName("project-entry").length;
            let newEntry = `
            <div class="work-entry row mb-2 d-flex align-items-center">
                <div class="col-md-2">
                    <input name="Projects[${index}].Start" type="date" class="form-control" required />
                </div>
                <div class="col-md-2">
                    <input name="Projects[${index}].End" type="date" class="form-control" required />
                </div>
                <div class="col-md-7">
                    <input name="Projects[${index}].Text" class="form-control" placeholder="Beschreibung" required />
                </div>
                <div class="col-md-1 text-end">
                    <button type="button" class="btn btn-danger btn-sm remove-work">-</button>
                </div>
            </div>`;
            container.insertAdjacentHTML("beforeend", newEntry);
        });

        // Add Skill Entry
        document.getElementById("add-skill").addEventListener("click", function () {
            let container = document.getElementById("skills-container");
            let index = container.getElementsByClassName("skill-entry").length;
            let newEntry = `
            <div class="skill-entry row mb-2 d-flex align-items-center">
                <div class="col-md-3">
                    <input name="Skills[${index}].Text" class="form-control" placeholder="Fähigkeit" required />
                </div>
                <div class="col-md-4">
                    <input name="Skills[${index}].Percent" type="range" class="form-range" min="0" max="100" step="5" value="100" />
                    <span id="skill-percent-${index}" class="skill-percent">100%</span>
                </div>
                <div class="col-md-3">
                    <input name="Skills[${index}].Level" type="range" class="form-range" min="1" max="3" step="1" value="1" />
                    <span id="skill-level-${index}" class="skill-level">1</span>
                </div>
                <div class="col-md-2 text-end">
                    <button type="button" class="btn btn-danger btn-sm remove-skill">-</button>
                </div>
            </div>`;
            container.insertAdjacentHTML("beforeend", newEntry);

            // Update percent display for the new skill range input
            let rangeInput = document.querySelector(`input[name="Skills[${index}].Percent"]`);
            let percentDisplay = document.getElementById(`skill-percent-${index}`);

            rangeInput.addEventListener('input', function (e) {
                percentDisplay.textContent = `${e.target.value}%`;
                updateSkillTotal(); // Update the total percentage whenever the slider changes
            });
        });

        // Add Language Entry
        document.getElementById("add-language").addEventListener("click", function () {
            let container = document.getElementById("languages-container");
            let index = container.getElementsByClassName("language-entry").length;
            let newEntry = `
            <div class="language-entry row mb-2 d-flex align-items-center">
                <div class="col-md-3">
                    <input name="Languages[${index}].Text" class="form-control" placeholder="Sprache" required />
                </div>
                <div class="col-md-4">
                    <input name="Languages[${index}].Percent" type="range" class="form-range" min="0" max="100" step="5" value="100" />
                    <span id="language-percent-${index}" class="language-percent">0%</span>
                </div>
                <div class="col-md-3">
                    <input name="Languages[${index}].Level" type="range" class="form-range" min="1" max="3" step="1" value="1" />
                    <span id="language-level-${index}" class="language-level">1</span>
                </div>
                <div class="col-md-2 text-end">
                    <button type="button" class="btn btn-danger btn-sm remove-language">-</button>
                </div>
            </div>`;
            container.insertAdjacentHTML("beforeend", newEntry);

            // Update percent display for the new skill range input
            let rangeInput = document.querySelector(`input[name="Languages[${index}].Percent"]`);
            let percentDisplay = document.getElementById(`language-percent-${index}`);

            rangeInput.addEventListener('input', function (e) {
                percentDisplay.textContent = `${e.target.value}%`;
                updateLanguagesTotal(); // Update the total percentage whenever the slider changes
            });
        });



        // Add Versioning Entry
        document.getElementById("add-versioning").addEventListener("click", function () {
            let container = document.getElementById("versionings-container");
            let index = container.getElementsByClassName("versioning-entry").length;
            let newEntry = `
            <div class="versioning-entry row mb-2 d-flex align-items-center">
                <div class="col-md-3">
                    <input name="Versionings[${index}].Text" class="form-control" placeholder="Versionsverwaltung" required />
                </div>
                <div class="col-md-4">
                    <input name="Versionings[${index}].Percent" type="range" class="form-range" min="0" max="100" step="5" value="100" />
                    <span id="versioning-percent-${index}" class="versioning-percent">100%</span>
                </div>
                <div class="col-md-3">
                    <input name="Versionings[${index}].Level" type="range" class="form-range" min="1" max="3" step="1" value="1" />
                    <span id="versioning-level-${index}" class="versioning-level">1</span>
                </div>
                <div class="col-md-2 text-end">
                    <button type="button" class="btn btn-danger btn-sm remove-versioning">-</button>
                </div>
            </div>`;
            container.insertAdjacentHTML("beforeend", newEntry);

            // Update percent display for the new skill range input
            let rangeInput = document.querySelector(`input[name="Versionings[${index}].Percent"]`);
            let percentDisplay = document.getElementById(`versioning-percent-${index}`);

            rangeInput.addEventListener('input', function (e) {
                percentDisplay.textContent = `${e.target.value}%`;
                updateVersioningsTotal(); // Update the total percentage whenever the slider changes
            });
        });


        // Remove Entry Handlers
        document.addEventListener("click", function (event) {
            if (event.target.classList.contains("remove-education")) event.target.closest(".education-entry").remove();
            if (event.target.classList.contains("remove-work")) event.target.closest(".work-entry").remove();
            if (event.target.classList.contains("remove-project")) event.target.closest(".project-entry").remove();
            if (event.target.classList.contains("remove-skill")) {
                event.target.closest(".skill-entry").remove();
                updateSkillTotal(); // Update the total percentage after removal
            }
            if (event.target.classList.contains("remove-language")) {
                event.target.closest(".language-entry").remove();
                updateLanguagesTotal(); // Update the total percentage after removal
            }
            if (event.target.classList.contains("remove-versioning")) {
                event.target.closest(".versioning-entry").remove();
                updateVersioningsTotal(); // Update the total percentage after removal
            }
        });

        // Function to ensure the total sum of all skill percentages does not exceed 100
        function updateSkillTotal() {
            let total = 0;
            let skills = document.querySelectorAll('input[name^="Skills"][type="range"]');
            skills.forEach(skill => {
                total += parseInt(skill.value, 10);
            });

            // Check if the total exceeds 100
            if (total > 100) {
                // If the total exceeds 100, adjust the last skill's percentage
                let lastSkill = skills[skills.length - 1];
                let excess = total - 100;
                lastSkill.value = parseInt(lastSkill.value, 10) - excess;
                document.getElementById(`skill-percent-${skills.length - 1}`).textContent = `${lastSkill.value}%`;
            }
        }

        // Function to ensure the total sum of all skill percentages does not exceed 100
        function updateLanguagesTotal() {
            let total = 0;
            let skills = document.querySelectorAll('input[name^="Languages"][type="range"]');
            skills.forEach(skill => {
                total += parseInt(skill.value, 10);
            });

            // Check if the total exceeds 100
            if (total > 100) {
                // If the total exceeds 100, adjust the last percentage
                let lastSkill = skills[skills.length - 1];
                let excess = total - 100;
                lastSkill.value = parseInt(lastSkill.value, 10) - excess;
                document.getElementById(`language-percent-${skills.length - 1}`).textContent = `${lastSkill.value}%`;
            }
        }

        // Function to ensure the total sum of all skill percentages does not exceed 100
        function updateVersioningsTotal() {
            let total = 0;
            let skills = document.querySelectorAll('input[name^="Versionings"][type="range"]');
            skills.forEach(skill => {
                total += parseInt(skill.value, 10);
            });

            // Check if the total exceeds 100
            if (total > 100) {
                // If the total exceeds 100, adjust the last percentage
                let lastSkill = skills[skills.length - 1];
                let excess = total - 100;
                lastSkill.value = parseInt(lastSkill.value, 10) - excess;
                document.getElementById(`versioning-percent-${skills.length - 1}`).textContent = `${lastSkill.value}%`;
            }
        }
    });
</script>